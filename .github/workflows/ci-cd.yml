name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017

    env:
      NODE_ENV: test
      MONGO_URI: mongodb://localhost:27017/blogify_test
      JWT_SECRET: test_jwt_secret
      JWT_REFRESH_SECRET: test_jwt_refresh_secret

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: server/package-lock.json

    - name: Install backend dependencies
      run: npm install --prefix server

    - name: Run backend tests
      run: npm run test --prefix server

  test-frontend:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: client/package-lock.json

    - name: Install frontend dependencies
      run: npm install --prefix client

    - name: Run frontend tests
      run: npm run test:ci --prefix client

    - name: Build frontend
      run: npm run build --prefix client

  build-and-deploy:
    needs: [test-backend, test-frontend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm install --prefix server
        npm install --prefix client

    - name: Build frontend
      run: npm run build --prefix client

    - name: Run security audit
      run: |
        npm audit --prefix server --audit-level high
        npm audit --prefix client --audit-level high

    # Add deployment steps here based on your hosting platform
    # Example for Railway:
    # - name: Deploy to Railway
    #   uses: railway/deploy@v1
    #   with:
    #     token: ${{ secrets.RAILWAY_TOKEN }}
    #     service: your-service-name